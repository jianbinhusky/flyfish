package %PackageName%.service;

import java.util.List;
import java.util.Map;

import lombok.Setter;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;

import %PackageName%.bean.%TableName%;
import %PackageName%.dao.%TableName%Dao;
import %PackageName%.search.%TableName%SearchBean;
import %public%.util.PageModel;

@Component(value="%pTableName%Service")
@Service
@Transactional(propagation=Propagation.SUPPORTS,readOnly=true)
public class %TableName%ServiceImpl implements %TableName%Service{

	@Autowired
	@Setter
	private %TableName%Dao %pTableName%Dao;
		
	public void add%TableName%(%TableName% %pTableName%){
		%pTableName%Dao.insert%TableName%(%pTableName%);
	}
	
	@Transactional(propagation=Propagation.REQUIRED,readOnly=false)
	public void batchAdd%TableName%(List<%TableName%> list){
		%pTableName%Dao.batchInsert%TableName%(list);
	}
	
	public %TableName% get%TableName%ByExample(%TableName% %pTableName%){
		return %pTableName%Dao.get%TableName%ByExample(%pTableName%);
	}
	
	public void modify%TableName%ByExample(%TableName% %pTableName%){
		%pTableName%Dao.update%TableName%ByExample(%pTableName%);
	}
	
	public void remove%TableName%ByExample(%TableName% %pTableName%){
		%pTableName%Dao.delete%TableName%ByExample(%pTableName%);
	}
	
	public void remove%TableName%ByCondition(%TableName%SearchBean condition){
		%pTableName%Dao.delete%TableName%ByCondition(condition);
	}
	
	@Transactional(propagation=Propagation.REQUIRED,readOnly=false)
	public void batchRemove%TableName%ByExample(List<%TableName%> list){
		%pTableName%Dao.batchDelete%TableName%ByExample(list);
	}
	
	public PageModel query%TableName%BySql(String where,int offset,int limit){
		//condition.buildSql();//只用orderSql
		PageModel pm=new PageModel();
		pm.setOffset(offset);
		pm.setPageSize(limit);
		pm.setCount(%pTableName%Dao.get%TableName%CountByWhere(where));
		pm.setData(%pTableName%Dao.get%TableName%ListByWhere(where,offset,limit));
		return pm;
	}
	
	public PageModel query%TableName%ByCondition(%TableName%SearchBean condition){
		PageModel pm=new PageModel();
		pm.setOffset(condition.getStart());
		pm.setPageSize(condition.getCount());
		pm.setCount(%pTableName%Dao.get%TableName%CountByCondition(condition));
		pm.setData(%pTableName%Dao.get%TableName%ListByCondition(condition));
		return pm;
	}
	
	public List<%TableName%> query%TableName%ListByWhere(String where){
		return %pTableName%Dao.get%TableName%ListBySql(where);
	}
	
	public List<%TableName%> query%TableName%ListByExample(%TableName% %pTableName%){
		return %pTableName%Dao.get%TableName%ListByExample(%pTableName%);
	}
	
	public List<%TableName%> get%TableName%ByCondition(%TableName%SearchBean condition){
		return %pTableName%Dao.get%TableName%ByCondition(condition);
	}
	
	public List<%TableName%> query%TableName%ListByCondition(%TableName%SearchBean condition){
		return %pTableName%Dao.get%TableName%ListByCondition(condition);
	}
	
	public void modify%TableName%BySql(String sql){
		%pTableName%Dao.update%TableName%ByWhere(sql);
	}
	
	public void modify%TableName%ByCondition(%TableName%SearchBean condition){
		%pTableName%Dao.update%TableName%(condition);
	}
	
	public void remove%TableName%BySql(String sql){
		%pTableName%Dao.delete%TableName%ByWhere(sql);
	}
	
	public int get%TableName%CountBySql(String sql){
		return %pTableName%Dao.get%TableName%CountByWhere(sql);
	}
	
	public int get%TableName%CountByExample(%TableName% %pTableName%){
		return %pTableName%Dao.get%TableName%CountByExample(%pTableName%);
	}
	
	public int get%TableName%CountByCondition(%TableName%SearchBean condition){
		return %pTableName%Dao.get%TableName%CountByCondition(condition);
	}
	
	public Map<String,Object> get%TableName%ColumnByCondition(%TableName%SearchBean condition){
		return %pTableName%Dao.get%TableName%ColumnByCondition(condition);
	}
	
	public void update%TableName%ByExample(%TableName% %pTableName%){
		%pTableName%Dao.update%TableName%ByExample(%pTableName%);
	}
	
	@Transactional(propagation=Propagation.REQUIRED,readOnly=false)
	public void batchModify%TableName%ByExample(List<%TableName%> list){
		%pTableName%Dao. batchModify%TableName%ByExample(list);
	}
}