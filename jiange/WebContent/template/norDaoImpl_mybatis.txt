package %PackageName%.dao;

import org.apache.ibatis.executor.BatchResult;
import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.session.SqlSession;
import org.mybatis.spring.support.SqlSessionDaoSupportExt;
import org.springframework.stereotype.Component;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import %PackageName%.search.%TableName%SearchBean;
import %PackageName%.bean.%TableName%;

/**
 * <p>Title: </p>
 *
 * <p>Description:%TableName%</p>
 *
 * <p>Copyright: Copyright (c) 2015</p>
 *
 * <p>Author: hujianbin</p>
 *
 * @author AutoCreate
 * @version 1.0
 */

@Component(value="%pTableName%Dao")
public class %TableName%DaoImpl extends SqlSessionDaoSupportExt implements %TableName%Dao {
	public %TableName%DaoImpl() {
		
    }

  	public int insert%TableName%(%TableName% %sTableName%){
    	return getSqlSession().insert("%PackageName%.dao.%TableName%Dao.insert%TableName%", %sTableName%);
  	}

  	public int update%TableName%(%TableName% %sTableName%){
    	return getSqlSession().update("%PackageName%.dao.%TableName%Dao.update%TableName%", %sTableName%);
  	}
  
  	public %TableName% get%TableName%ByWhere(String where){
    	return (%TableName%) getSqlSession().selectOne("%PackageName%.dao.%TableName%Dao.get%TableName%ByWhere", where);
  	}
  
  	public List<%TableName%> get%TableName%ListByWhere(String where){
    	return getSqlSession().selectList("%PackageName%.dao.%TableName%Dao.get%TableName%ListByWhere", where);
  	}
  	
  	public List<%TableName%> get%TableName%ListByWhere(String where,int offset,int limit){
  		return getSqlSession().selectList("%PackageName%.dao.%TableName%Dao.get%TableName%ListByWhere", where,new RowBounds(offset, limit));
  	}
  	
  	public List<%TableName%> get%TableName%ListByCondition(%TableName%SearchBean condition){
    	return getSqlSession().selectList("%PackageName%.dao.%TableName%Dao.get%TableName%ListByCondition", condition,new RowBounds(condition.getStart(), condition.getCount()));
  	}
  
  	public List<%TableName%> get%TableName%ListBySql(String sql){
    	return getSqlSession().selectList("%PackageName%.dao.%TableName%Dao.get%TableName%ByWhere", sql);
  	}
  
  	public int get%TableName%CountByWhere(String where){
    	return getSqlSession().selectOne("%PackageName%.dao.%TableName%Dao.get%TableName%CountByWhere", where);
  	}
  	
  	public int get%TableName%CountByExample(%TableName% %sTableName%){
    	return getSqlSession().selectOne("%PackageName%.dao.%TableName%Dao.get%TableName%CountByExample", %sTableName%);
  	}
  	
  	public int get%TableName%CountByCondition(%TableName%SearchBean condition){
    	return getSqlSession().selectOne("%PackageName%.dao.%TableName%Dao.get%TableName%CountByCondition", condition);
  	}
  
  	public int update%TableName%ByWhere(String where){
    	return getSqlSession().update("%PackageName%.dao.%TableName%Dao.update%TableName%ByWhere", where);
  	}
  
  	public int delete%TableName%ByWhere(String where){
   		return getSqlSession().delete("%PackageName%.dao.%TableName%Dao.delete%TableName%ByWhere",where);
  	}
  	
  	public List<BatchResult> batchInsert%TableName%(List<%TableName%> list){
  		List<BatchResult> results=new ArrayList<BatchResult>();
  		SqlSession sqlSession=getBatchSqlSession();
  		for (int i=1;i<=list.size();i++) {
			sqlSession.insert("%PackageName%.dao.%TableName%Dao.insert%TableName%", list.get(i-1));
			if(i%1000==0)
				results.addAll(sqlSession.flushStatements());
		}
		results.addAll(sqlSession.flushStatements());
		return results;
  	}
  	
  	public %TableName% get%TableName%ByExample(%TableName% %sTableName%){
  		return getSqlSession().selectOne("%PackageName%.dao.%TableName%Dao.get%TableName%ByExample", %sTableName%);
  	}
  	
  	public List<%TableName%> get%TableName%ListByExample(%TableName% %sTableName%){
  		return getSqlSession().selectList("%PackageName%.dao.%TableName%Dao.get%TableName%ByExample", %sTableName%);
  	}
  	
  	public int delete%TableName%ByExample(%TableName% %sTableName%){
  		return getSqlSession().delete("%PackageName%.dao.%TableName%Dao.delete%TableName%ByExample",%sTableName%);
  	}
  	
  	public int delete%TableName%ByCondition(%TableName%SearchBean condition){
  		return getSqlSession().delete("%PackageName%.dao.%TableName%Dao.delete%TableName%ByCondition",condition);
  	}
  	
  	public List<BatchResult> batchDelete%TableName%ByExample(List<%TableName%> list){
  		List<BatchResult> results=new ArrayList<BatchResult>();
  		SqlSession sqlSession=getBatchSqlSession();
  		for (int i=1;i<=list.size();i++) {
			sqlSession.delete("%PackageName%.dao.%TableName%Dao.delete%TableName%ByExample", list.get(i-1));
			if(i%1000==0)
				results.addAll(sqlSession.flushStatements());
		}
		results.addAll(sqlSession.flushStatements());
		return results;
  	}
  	
  	public List<%TableName%> get%TableName%ByCondition(%TableName%SearchBean condition){
    	return getSqlSession().selectList("%PackageName%.dao.%TableName%Dao.get%TableName%ByCondition", condition);
  	}
  	
  	public int update%TableName%(%TableName%SearchBean condition){
  		return getSqlSession().update("%PackageName%.dao.%TableName%Dao.update%TableName%ByCondition", condition);
  	}
  	
  	public Map<String,Object> get%TableName%ColumnByCondition(%TableName%SearchBean condition){
  		return getSqlSession().selectOne("%PackageName%.dao.%TableName%Dao.get%TableName%ColumnByCondition", condition);
  	}
  	
  	public List<Map<String,Object>> get%TableName%ColumnListByCondition(%TableName%SearchBean condition){
  		return getSqlSession().selectList("%PackageName%.dao.%TableName%Dao.get%TableName%ColumnByCondition", condition);
  	}
  	
  	public int update%TableName%ByExample(%TableName% %sTableName%){
  		return getSqlSession().update("%PackageName%.dao.%TableName%Dao.update%TableName%ByExample", %sTableName%);
  	}
  	
  	public List<BatchResult> batchModify%TableName%ByExample(List<%TableName%> list){
  		List<BatchResult> results=new ArrayList<BatchResult>();
  		SqlSession sqlSession=getBatchSqlSession();
  		for (int i=1;i<=list.size();i++) {
			sqlSession.update("%PackageName%.dao.%TableName%Dao.update%TableName%ByExample", list.get(i-1));
			if(i%1000==0)
				results.addAll(sqlSession.flushStatements());
		}
		results.addAll(sqlSession.flushStatements());
		return results;
  	}
}