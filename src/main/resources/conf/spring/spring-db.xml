<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="  
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd  
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd  
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd  
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
    <!-- c3p0 database connect pool -->
	<!-- 
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${${dbType}_driverName}" />
		<property name="jdbcUrl" value="${${dbType}_url}" />
		<property name="user" value="${${dbType}_username}"/>
		<property name="password" value="${${dbType}_password}"/>
		<property name="minPoolSize" value="${minPoolSize}" />
		<property name="maxPoolSize" value="${maxPoolSize}" />
		<property name="maxIdleTime" value="2400" />
		<property name="acquireIncrement" value="${acquireIncrement}" />
		<property name="maxStatements" value="0" />
		<property name="initialPoolSize" value="${initialPoolSize}" />
		<property name="acquireRetryAttempts" value="3" />
		<property name="breakAfterAcquireFailure" value="false" />
		<property name="testConnectionOnCheckout" value="false" />
		<property name="testConnectionOnCheckin" value="false"/>
	</bean> 
	-->
	<!-- c3p0 database connect pool -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
	     <property name="url" value="${${dbType}_url}" />
	     <property name="username" value="${${dbType}_username}"/>
	     <property name="password" value="${${dbType}_password}" />
	     <property name="filters" value="stat"/>
	     <property name="maxActive" value="${maxPoolSize}"/>
	     <property name="initialSize" value="${initialPoolSize}"/>
	     <property name="maxWait" value="60000"/>
	     <property name="minIdle" value="1"/>
	     <property name="timeBetweenEvictionRunsMillis" value="60000"/>
	     <property name="minEvictableIdleTimeMillis" value="300000"/>
	     <property name="validationQuery" value="SELECT 'X'"/>
	     <property name="testWhileIdle" value="true"/>
	     <property name="testOnBorrow" value="false"/>
	     <property name="testOnReturn" value="false"/>
	     <property name="poolPreparedStatements" value="false"/>
	     <property name="maxOpenPreparedStatements" value="-1"/>
 	</bean>
 	<!-- 对数据库clob、 blob[大对象数据]数据型进行操作的支持 -->
	<bean id="nativeJdbcExtractor"
		class="org.springframework.jdbc.support.nativejdbc.C3P0NativeJdbcExtractor"
		lazy-init="true" />
	<bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler"
		lazy-init="true">
	</bean>
	<!--Mybatis 配置，配置mybatis-config.xml文件的路径与数据源  -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
    	<property name="configLocation" value="classpath:mybatis-config.xml" />  
    	<property name="dataSource" ref="dataSource" />  
	</bean>
	<!-- Spring jdbc 模板，对传统jdbc API操作的封装 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 配置事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 启用对事务注解的支持  -->  
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
</beans>